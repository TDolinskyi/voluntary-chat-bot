
# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# An example controller showing a sample home page
GET         /                               de.bot.controllers.MessageController.index
#GET     /run                        de.bot.controllers.MessageController.runHook
GET         /all                            de.bot.controllers.MessageController.getAll
#GET     /stop                       de.bot.controllers.MessageController.stopHook
#POST    /hook                       de.bot.controllers.MessageController.hook
# An example controller showing how to use dependency injection
#GET     /count                      controllers.CountController.count
# An example controller showing how to write asynchronous code
#GET     /message                    controllers.AsyncController.message
GET         /signIn                         de.bot.controllers.SignInController.view
POST        /signIn                         de.bot.controllers.SignInController.submit

GET         /account/email/:email           de.bot.controllers.ActivateAccountController.send(email: String)
GET         /account/activate/:token        de.bot.controllers.ActivateAccountController.activate(token: java.util.UUID)

GET         /totp                           de.bot.controllers.TotpController.view(userId: java.util.UUID, sharedKey: String, rememberMe: Boolean)
GET         /enableTotp                     de.bot.controllers.TotpController.enableTotp
GET         /disableTotp                    de.bot.controllers.TotpController.disableTotp
POST        /totpSubmit                     de.bot.controllers.TotpController.submit
POST        /enableTotpSubmit               de.bot.controllers.TotpController.enableTotpSubmit

GET         /totpRecovery                   de.bot.controllers.TotpRecoveryController.view(userID: java.util.UUID, sharedKey: String, rememberMe: Boolean)
POST        /totpRecoverySubmit             de.bot.controllers.TotpRecoveryController.submit

GET         /password/forgot                de.bot.controllers.ForgotPasswordController.view
POST        /password/forgot                de.bot.controllers.ForgotPasswordController.submit
GET         /password/reset/:token          de.bot.controllers.ResetPasswordController.view(token: java.util.UUID)
POST        /password/reset/:token          de.bot.controllers.ResetPasswordController.submit(token: java.util.UUID)
GET         /password/change                de.bot.controllers.ChangePasswordController.view
POST        /password/change                de.bot.controllers.ChangePasswordController.submit

GET         /signOut                        de.bot.controllers.MessageController.signOut
GET         /authenticate/:provider         de.bot.controllers.SocialAuthController.authenticate(provider)

GET         /signUp                         de.bot.controllers.SignUpController.view
POST        /signUp                         de.bot.controllers.SignUpController.submit

# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file                   controllers.Assets.versioned(path="/public", file: Asset)
->          /webjars                        webjars.Routes

      