mongo {
  rsMembers = [
    {
      "host": "127.0.0.1",
      "port": 27017
    }
  ]
}

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
    actor {
      default-dispatcher {
        fork-join-executor {
          parallelism-factor = 1.0
          parallelism-max = 24
          task-peeking-mode = LIFO
        }
      }
    }
}

play.http.secret.key = "changeme"
play.modules {
  enabled += de.bot.MainModule
  disabled += "com.mohiva.play.silhouette.api.actions.SecuredErrorHandlerModule"
  disabled += "com.mohiva.play.silhouette.api.actions.UnsecuredErrorHandlerModule"
}

play.i18n {
  # The application languages
  langs = [ "en" ]

}

play.filters {
#   enabled = [filters.Filters]
  hosts {
    allowed = [".ngrok.io", "localhost:9000", ".your.domain.com"]
  }
}

play.filters.enabled += "play.filters.csp.CSPFilter"


## Play HTTP settings
# ~~~~~
play.http.requestHandler = "play.api.http.DefaultHttpRequestHandler"

play.filters.csp {
  directives {
    default-src = "'self'"
    img-src = "'self' *.fbcdn.net *.twimg.com *.googleusercontent.com *.xingassets.com vk.com *.yimg.com secure.gravatar.com chart.googleapis.com"
    style-src = "'self' 'unsafe-inline' cdnjs.cloudflare.com maxcdn.bootstrapcdn.com cdn.jsdelivr.net fonts.googleapis.com"
    font-src = "'self' fonts.gstatic.com fonts.googleapis.com cdnjs.cloudflare.com"
    script-src = ${play.filters.csp.directives.script-src} "cdnjs.cloudflare.com"
    connect-src = "'self' twitter.com *.xing.com"
  }
}

play.assets {
  path = "/public"
  urlPrefix = "/assets"
}

play.mailer {
  host="smtp.gmail.com"
  port=587
  ssl=false
  tls=true
  user="email@box.com"
  password="emailPassword"
}

bot {
  token = "bot token"
  domain = "http://localhost:9000"
  verificationEmailReceivers = ["admin@activator.com"]
}

silhouette {

  # Authenticator settings
  authenticator.cookieName="authenticator"
  authenticator.cookiePath="/"
  authenticator.secureCookie=false // Disabled for testing on localhost without SSL, otherwise cookie couldn't be set
  authenticator.httpOnlyCookie=true
  authenticator.sameSite="Lax"
  authenticator.useFingerprinting=true
  authenticator.authenticatorIdleTimeout=90 minutes
  authenticator.authenticatorExpiry=12 hours

  authenticator.rememberMe.cookieMaxAge=30 days
  authenticator.rememberMe.authenticatorIdleTimeout=5 days
  authenticator.rememberMe.authenticatorExpiry=30 days

  authenticator.signer.key = "[changeme]" // A unique encryption key
  authenticator.crypter.key = "[changeme]" // A unique encryption key

  # OAuth1 token secret provider settings
  oauth1TokenSecretProvider.cookieName="OAuth1TokenSecret"
  oauth1TokenSecretProvider.cookiePath="/"
  oauth1TokenSecretProvider.secureCookie=false // Disabled for testing on localhost without SSL, otherwise cookie couldn't be set
  oauth1TokenSecretProvider.httpOnlyCookie=true
  oauth1TokenSecretProvider.sameSite="Lax"
  oauth1TokenSecretProvider.expirationTime=5 minutes

  oauth1TokenSecretProvider.signer.key = "[changeme]" // A unique encryption key
  oauth1TokenSecretProvider.crypter.key = "[changeme]" // A unique encryption key

  # Social state handler
  socialStateHandler.signer.key = "[changeme]" // A unique encryption key

  # CSRF state item handler settings
  csrfStateItemHandler.cookieName="OAuth2State"
  csrfStateItemHandler.cookiePath="/"
  csrfStateItemHandler.secureCookie=false // Disabled for testing on localhost without SSL, otherwise cookie couldn't be set
  csrfStateItemHandler.httpOnlyCookie=true
  csrfStateItemHandler.sameSite="Lax"
  csrfStateItemHandler.expirationTime=5 minutes

  csrfStateItemHandler.signer.key = "[changeme]" // A unique encryption key

  # Facebook provider
  facebook.authorizationURL="https://graph.facebook.com/v2.3/oauth/authorize"
  facebook.accessTokenURL="https://graph.facebook.com/v2.3/oauth/access_token"
  facebook.redirectURL="http://localhost:9000/authenticate/facebook"
  facebook.clientID=""
  facebook.clientID=${?FACEBOOK_CLIENT_ID}
  facebook.clientSecret=""
  facebook.clientSecret=${?FACEBOOK_CLIENT_SECRET}
  facebook.scope="email"

  # Google provider
  google.authorizationURL="https://accounts.google.com/o/oauth2/auth"
  google.accessTokenURL="https://accounts.google.com/o/oauth2/token"
  google.redirectURL="http://localhost:9000/authenticate/google"
  google.clientID=""
  google.clientID=${?GOOGLE_CLIENT_ID}
  google.clientSecret=""
  google.clientSecret=${?GOOGLE_CLIENT_SECRET}
  google.scope="profile email"

  # VK provider
  vk.authorizationURL="http://oauth.vk.com/authorize"
  vk.accessTokenURL="https://oauth.vk.com/access_token"
  vk.redirectURL="http://localhost:9000/authenticate/vk"
  vk.clientID=""
  vk.clientID=${?VK_CLIENT_ID}
  vk.clientSecret=""
  vk.clientSecret=${?VK_CLIENT_SECRET}
  vk.scope="email"

  # Twitter provider
  twitter.requestTokenURL="https://twitter.com/oauth/request_token"
  twitter.accessTokenURL="https://twitter.com/oauth/access_token"
  twitter.authorizationURL="https://twitter.com/oauth/authenticate"
  twitter.callbackURL="http://localhost:9000/authenticate/twitter"
  twitter.consumerKey=""
  twitter.consumerKey=${?TWITTER_CONSUMER_KEY}
  twitter.consumerSecret=""
  twitter.consumerSecret=${?TWITTER_CONSUMER_SECRET}

  # Xing provider
  xing.requestTokenURL="https://api.xing.com/v1/request_token"
  xing.accessTokenURL="https://api.xing.com/v1/access_token"
  xing.authorizationURL="https://api.xing.com/v1/authorize"
  xing.callbackURL="http://localhost:9000/authenticate/xing"
  xing.consumerKey=""
  xing.consumerKey=${?XING_CONSUMER_KEY}
  xing.consumerSecret=""
  xing.consumerSecret=${?XING_CONSUMER_SECRET}

  # Yahoo provider
  yahoo.providerURL="https://me.yahoo.com/"
  yahoo.callbackURL="http://localhost:9000/authenticate/yahoo"
  yahoo.axRequired={
    "fullname": "http://axschema.org/namePerson",
    "email": "http://axschema.org/contact/email",
    "image": "http://axschema.org/media/image/default"
  }
  yahoo.realm="http://localhost:9000"
}